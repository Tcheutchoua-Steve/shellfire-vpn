/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VpnSelectDialog2.java
 *
 * Created on 21.07.2011, 09:19:21
 */
package de.shellfire.vpn.gui;

import java.awt.Color;
import java.awt.Image;
import java.util.LinkedList;
import java.util.prefs.Preferences;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableColumnModel;

import org.xnap.commons.i18n.I18n;

import de.shellfire.vpn.Util;
import de.shellfire.vpn.exception.VpnException;
import de.shellfire.vpn.gui.helper.MoveMouseListener;
import de.shellfire.vpn.gui.model.VpnSelectionTableModel;
import de.shellfire.vpn.i18n.VpnI18N;
import de.shellfire.vpn.types.ProductType;
import de.shellfire.vpn.webservice.ShellfireService;
import de.shellfire.vpn.webservice.Vpn;

/**
 *
 * @author bettmenn
 */
public class VpnSelectDialog extends javax.swing.JFrame {
  private static final long serialVersionUID = 1L;
  private final LoginForm parentFrame;
  private VpnSelectionTableModel vpnSelectionTableModel;
  private final ShellfireService service;
  private boolean autoConnect;
  public static final String REG_REMEMBERSELECTION = "SelectedVpnId";
  private static I18n i18n = VpnI18N.getI18n();

  VpnSelectDialog(LoginForm parent, ShellfireService service, boolean autoConnect) {
    this.parentFrame = parent;
    this.service = service;
    this.autoConnect = autoConnect;
    this.setUndecorated(true);
    MoveMouseListener mml = new MoveMouseListener(this);
    this.addMouseListener(mml);
    this.addMouseMotionListener(mml);
    this.loadIcon();

    initComponents();

    this.initVpnSelectTable(service.getAllVpn());
    this.setLocationRelativeTo(null);
    this.pack();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method
   * is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel6 = new javax.swing.JPanel();
    jBackLabel = new javax.swing.JLabel();
    jHeaderPanel = new javax.swing.JPanel();
    jLabel5 = new javax.swing.JLabel();
    jPanel7 = new javax.swing.JPanel();
    jSelectVpnPanel = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jSelectButton = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    jVpnSelectTable = new javax.swing.JTable();
    jRememberSelection = new javax.swing.JCheckBox();
    jLabel16 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setResizable(false);

    jPanel6.setBackground(new java.awt.Color(0, 0, 0));
    jPanel6.setName("jPanel6"); // NOI18N
    jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jBackLabel.setFont(new java.awt.Font("Arial", 0, 14));
    jBackLabel.setForeground(new java.awt.Color(255, 255, 255));
    jBackLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jBackLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit.png"))); // NOI18N
    jBackLabel.setText(i18n.tr("zurück"));
    jBackLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jBackLabel.setName("jBackLabel"); // NOI18N
    jBackLabel.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jBackLabelMouseClicked(evt);
      }

      public void mouseEntered(java.awt.event.MouseEvent evt) {
        jBackLabelMouseEntered(evt);
      }

      public void mouseExited(java.awt.event.MouseEvent evt) {
        jBackLabelMouseExited(evt);
      }
    });
    jPanel6.add(jBackLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 30));

    jHeaderPanel.setBackground(new java.awt.Color(18, 172, 229));
    jHeaderPanel.setName("jHeaderPanel"); // NOI18N
    jHeaderPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel5.setIcon(ShellfireVPNMainForm.getLogo());
    jLabel5.setAlignmentY(0.0F);
    jLabel5.setName("jLabel5"); // NOI18N
    jHeaderPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 100));

    jPanel7.setBackground(new java.awt.Color(64, 69, 73));
    jPanel7.setName("jPanel7"); // NOI18N
    jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jSelectVpnPanel.setName("jSelectVpnPanel"); // NOI18N

    jLabel1.setText(i18n.tr(
        "<html>In deinem Shellfire Account wurden mehrere VPN gefunden.<br />Bitte wähle den VPN aus, den du benutzen möchtest</html>"));
    jLabel1.setName("jLabel1"); // NOI18N

    jSelectButton.setText(i18n.tr("VPN auswählen"));
    jSelectButton.setName("jSelectButton"); // NOI18N
    jSelectButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jSelectButtonActionPerformed(evt);
      }
    });

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    jVpnSelectTable.setFont(new java.awt.Font("Lucida Grande", 0, 11)); // NOI18N
    jVpnSelectTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null }, { null, null, null, null } },
        new String[] { "Title 1", "Title 2", "Title 3", "Title 4" }));
    jVpnSelectTable.setAutoCreateRowSorter(true);
    jVpnSelectTable.setFocusable(false);
    jVpnSelectTable.setGridColor(new java.awt.Color(64, 69, 73));
    jVpnSelectTable.setName("jVpnSelectTable"); // NOI18N
    jScrollPane1.setViewportView(jVpnSelectTable);

    jRememberSelection.setSelected(true);
    jRememberSelection.setText(i18n.tr("Auswahl merken"));
    jRememberSelection.setName("jRememberSelection"); // NOI18N

    jLabel16.setFont(new java.awt.Font("Arial", 1, 24));
    jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel16.setText(i18n.tr("vpn auswahl"));
    jLabel16.setName("jLabel16"); // NOI18N

    jLabel3.setText(i18n.tr(
        "<html>Hinweis: Die VPN Typen PPTP und L2TP/IPSec müssen nach der Auswahl zunächst auf OpenVPN gewechselt werden, damit sf vpn die Verbindung herstellen kann.</html>"));
    jLabel3.setName("jLabel3"); // NOI18N

    javax.swing.GroupLayout jSelectVpnPanelLayout = new javax.swing.GroupLayout(jSelectVpnPanel);
    jSelectVpnPanel.setLayout(jSelectVpnPanelLayout);
    jSelectVpnPanelLayout.setHorizontalGroup(jSelectVpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jSelectVpnPanelLayout.createSequentialGroup().addContainerGap()
            .addGroup(jSelectVpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jSelectVpnPanelLayout.createSequentialGroup()
                    .addGroup(jSelectVpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jSelectVpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jRememberSelection, javax.swing.GroupLayout.Alignment.LEADING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addContainerGap())
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jSelectVpnPanelLayout.createSequentialGroup()
                    .addGroup(jSelectVpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 335,
                            Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 335,
                            Short.MAX_VALUE)
                        .addComponent(jSelectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
                    .addGap(15, 15, 15)))));
    jSelectVpnPanelLayout
        .setVerticalGroup(
            jSelectVpnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(
                    jSelectVpnPanelLayout.createSequentialGroup().addContainerGap()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRememberSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 21,
                            javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jSelectButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

    jPanel7.add(jSelectVpnPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 350, -1));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 400, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup()
            .addGap(0, 5, Short.MAX_VALUE).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup().addGap(290, 290, 290).addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE,
                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 5, Short.MAX_VALUE))));
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 430, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                        javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jBackLabelMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jBackLabelMouseClicked
    parentFrame.setVisible(true);
    this.setVisible(false);
  }// GEN-LAST:event_jBackLabelMouseClicked

  private void jBackLabelMouseEntered(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jBackLabelMouseEntered
    jBackLabel.setForeground(Color.LIGHT_GRAY);
  }// GEN-LAST:event_jBackLabelMouseEntered

  private void jBackLabelMouseExited(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jBackLabelMouseExited
    jBackLabel.setForeground(Color.white);
  }// GEN-LAST:event_jBackLabelMouseExited

  private void jSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSelectButtonActionPerformed
      try {    
        int selected = this.jVpnSelectTable.getSelectedRow();
          if (selected == -1) {
              JOptionPane.showMessageDialog(null, i18n.tr("Bitte wähle einen VPN aus der Liste um fortzufahren"), i18n.tr("Kein Vpn ausgewählt"), JOptionPane.ERROR_MESSAGE);
          } else {
              Vpn selectedVpn = this.vpnSelectionTableModel.getVpn(selected);
              rememberSelectionIfDesired(selectedVpn);
              
              this.service.selectVpn(selectedVpn);
              this.setVisible(false);
              ShellfireVPNMainForm mainForm = new ShellfireVPNMainForm(service);
              mainForm.setVisible(true);
              mainForm.afterLogin(autoConnect);
              
          }      
          } catch (VpnException ex) {
              Util.handleException(ex);
          }
  
    }// GEN-LAST:event_jSelectButtonActionPerformed

  private void initVpnSelectTable(LinkedList<Vpn> allVpn) {
    vpnSelectionTableModel = new VpnSelectionTableModel(allVpn);

    this.jVpnSelectTable.setModel(vpnSelectionTableModel);
    TableColumnModel cm = this.jVpnSelectTable.getColumnModel();

    cm.getColumn(0).setPreferredWidth(70);
    cm.getColumn(1).setPreferredWidth(100);
    cm.getColumn(2).setPreferredWidth(180);
    this.jVpnSelectTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    this.jVpnSelectTable.getTableHeader().setReorderingAllowed(false);
    // jScrollPane1.getViewport().setBackground(new Color(224, 224, 226));

  }

  private void loadIcon() {
    ImageIcon icon = new ImageIcon(getClass().getResource("/icons/sfvpn2-idle.png"));
    Image img = icon.getImage();

    setIconImage(img);

  }

  private void rememberSelectionIfDesired(Vpn selectedVpn) {
    Preferences prefs = LoginForm.getPreferences();
    if (jRememberSelection.isSelected()) {

      int vpnId = selectedVpn.getVpnId();
      System.out.println("Remembering Vpn ID:" + vpnId);

      prefs.putInt(REG_REMEMBERSELECTION, vpnId);
    } else {
      System.out.println("Forgetting vpn selections");
      prefs.putInt(REG_REMEMBERSELECTION, 0);
    }
  }

  public int rememberedVpnSelection() {
    Preferences prefs = LoginForm.getPreferences();
    int remembered = prefs.getInt(REG_REMEMBERSELECTION, 0);

    return remembered;
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jBackLabel;
  private javax.swing.JPanel jHeaderPanel;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel16;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JPanel jPanel6;
  private javax.swing.JPanel jPanel7;
  private javax.swing.JCheckBox jRememberSelection;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton jSelectButton;
  private javax.swing.JPanel jSelectVpnPanel;
  private javax.swing.JTable jVpnSelectTable;
  // End of variables declaration//GEN-END:variables
}
