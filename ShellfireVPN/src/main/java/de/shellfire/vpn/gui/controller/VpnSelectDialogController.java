package de.shellfire.vpn.gui.controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;

import java.net.URL;
import java.util.ResourceBundle;

import org.slf4j.Logger;
import org.xnap.commons.i18n.I18n;

import de.shellfire.vpn.Util;
import de.shellfire.vpn.VpnProperties;
import de.shellfire.vpn.gui.LoginForms;
import de.shellfire.vpn.gui.model.VpnSelectionFModel;
import de.shellfire.vpn.i18n.VpnI18N;
import de.shellfire.vpn.webservice.Vpn;
import de.shellfire.vpn.webservice.WebService;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ScrollPane;

import javafx.scene.image.ImageView;

import javafx.scene.control.CheckBox;

import javafx.scene.control.TableView;

import javafx.scene.control.TableColumn;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.Pane;

import javafx.scene.input.ContextMenuEvent;
import javafx.scene.input.MouseEvent;

public class VpnSelectDialogController extends AnchorPane implements Initializable {
	@FXML
	private Button selectVpnButton;
	@FXML
	private Label vpnSelectLabel;
	@FXML
	private CheckBox fAutoconnect;
	@FXML
	private Label vpnTypeLabel;
	@FXML
	private ScrollPane vpnScrollPane;
	@FXML
	private TableView vpnListTable;
	@FXML
	private TableColumn<VpnSelectionFModel,Integer> idTbleColumn;
	@FXML
	private TableColumn<VpnSelectionFModel,String> typeTbleColumn;
	@FXML
	private TableColumn<VpnSelectionFModel,String> accArtTbleColumn;
	@FXML
	private Label numAccountVpnLabel;
	@FXML
	private Pane headerPanel;
	@FXML
	private ImageView headerImageView;

        private  WebService service;
  private boolean autoConnect;
  public static final String REG_REMEMBERSELECTION = "SelectedVpnId";
  private static I18n i18n = VpnI18N.getI18n();
        
	private LoginForms application;
	private static final long serialVersionUID = 1L;
	private static Logger log = Util.getLogger(LoginForms.class.getCanonicalName());
    @FXML
    private Pane backLabelPane;
    @FXML
    private ImageView backImageVeiw;
	
	/**
	 * The constructor.
	 * The constructor is called before the initialize() method.
	 */
	public VpnSelectDialogController() {
		
	}
	// Event Listener on Button[#selectVpnButton].onAction
	@FXML
	public void handleSelectVpnButton(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on CheckBox[#fAutoconnect].onAction
	@FXML
	public void handlefAutoconnect(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on ImageView[#exitImageView].onContextMenuRequested
	public void handleEXitButtonClicked(ContextMenuEvent event) {
		// TODO Autogenerated
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		// firstNameColumn.setCellValueFactory(cellData -> cellData.getValue().firstNameProperty());
		//idTbleColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject() );
		//typeTbleColumn.setCellValueFactory(cellData -> cellData.getValue().typeProperty() );
		//accArtTbleColumn.setCellValueFactory(cellData -> cellData.getValue().accountArtProperty() );
		
                this.service = WebService.getInstance();
		initComponents();
               
	}
	
	public void initComponents(){
		
		this.headerImageView.setImage(ShellfireVPNMainFormFxmlController.getLogo());
		this.numAccountVpnLabel.setText(
				i18n.tr("<html>In deinem Shellfire Account wurden mehrere VPN gefunden.<br />Bitte wähle den VPN aus, den du benutzen möchtest</html>"));
	}

    @FXML
    private void handleBackLabel(MouseEvent event) {
    }
    
      private void rememberSelectionIfDesired(Vpn selectedVpn) {
    VpnProperties props = VpnProperties.getInstance();
    if (fAutoconnect.isSelected()) {

      int vpnId = selectedVpn.getVpnId();
      log.debug("Remembering Vpn ID:" + vpnId);

      props.setInt(REG_REMEMBERSELECTION, vpnId);
    } else {
      log.debug("Forgetting vpn selections");
      props.setInt(REG_REMEMBERSELECTION, 0);
    }
  }

  public int rememberedVpnSelection() {
    VpnProperties props = VpnProperties.getInstance();
    int remembered = props.getInt(REG_REMEMBERSELECTION, 0);

    return remembered;
  }

}
